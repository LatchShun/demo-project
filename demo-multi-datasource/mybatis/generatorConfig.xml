<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--导入属性配置 -->
    <!--<properties url="file:////Users/roderickWang/git/caijiajia/arenamgr/mybatisGenerator/generator.properties"></properties>-->
    <!--<properties url="file:////Users/zlh/cjj/arenamgr/mybatisGenerator/generator.properties"></properties>-->

    <!--指定特定数据库的jdbc驱动jar包的位置 -->
    <classPathEntry location="mysql-connector-java-5.1.37-bin.jar"/>

    <context id="default" targetRuntime="MyBatis3">

        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>
        <!-- optional，旨在创建class时，对注释进行控制 -->
        <commentGenerator>
            <property name="suppressDate" value="true"/>
        </commentGenerator>


        <!--jdbc的数据库连接 -->
        <!--<jdbcConnection driverClass="com.mysql.jdbc.Driver" connectionURL="jdbc:mysql://192.168.32.206:3306/seq"-->
        <!--userId="root" password="root">-->
        <!--</jdbcConnection>-->
        <!--<jdbcConnection driverClass="com.mysql.jdbc.Driver" connectionURL="jdbc:mysql://localhost:3306/seq"-->
        <!--userId="root" password="">-->
        <!--        <jdbcConnection driverClass="com.mysql.jdbc.Driver"-->
        <!--                        connectionURL="jdbc:mysql://devcommon.db.ali-bj-dev01.shuheo.net/featurehub"-->
        <!--                        userId="featurehub" password="1qaZ@WSX">-->
        <!--        </jdbcConnection>-->

        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/ujm"
                        userId="root" password="1qaz@WSX">
        </jdbcConnection>


        <!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制-->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类
            targetPackage     指定生成的model生成所在的包名
            targetProject     指定在该项目下所在的路径
        -->
        <javaModelGenerator targetPackage="indi.latch.demo.multidatasource.repo.mysql.domain"
                            targetProject="../src/main/java">
            <!-- 是否对model添加 构造函数 -->
            <property name="constructorBased" value="false"/>

            <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
            <property name="enableSubPackages" value="false"/>

            <!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 -->
            <property name="immutable" value="false"/>

            <!-- 给Model添加一个父类 -->

            <!-- 是否对类CHAR类型的列的数据进行trim操作 -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <sqlMapGenerator targetPackage="indi/latch/demo/multidatasource/repo/mysql/mapper"
                         targetProject="../src/main/resources">
            <property name="enableSubPackages" value="false" />
        </sqlMapGenerator>

        <javaClientGenerator type="XMLMAPPER"
                             targetPackage="indi.latch.demo.multidatasource.repo.mysql.mapper"
                             targetProject="../src/main/java">
            <property name="enableSubPackages" value="false" />
        </javaClientGenerator>

        <table tableName="ujm_topic" delimitIdentifiers="true" delimitAllColumns="true"/>
    </context>
</generatorConfiguration>
